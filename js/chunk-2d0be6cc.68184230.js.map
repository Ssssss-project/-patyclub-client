{"version":3,"sources":["webpack:///./src/views/ActivityView.vue","webpack:///./src/components/ActivityViewPage/CardList.vue","webpack:///./src/components/ActivityViewPage/CardList.vue?749c","webpack:///./src/components/ActivityViewPage/CardList.vue?82e4","webpack:///./src/components/ActivityViewPage/EventCategory.vue","webpack:///./src/components/ActivityViewPage/EventCategory.vue?4129","webpack:///./src/components/ActivityViewPage/EventCategory.vue?c8ac","webpack:///./src/components/ActivityViewPage/ActivityFilter.vue","webpack:///./src/components/ActivityViewPage/ActivityFilter.vue?cf7a","webpack:///./src/components/ActivityViewPage/ActivityFilter.vue?a8b7","webpack:///./src/views/ActivityView.vue?59bb","webpack:///./src/views/ActivityView.vue?7e95"],"names":["id","class","sortCondition","sortConditionModel","stringOptions","setSortCondition","setDefaultAllCondition","setArticles","handleSearchWord","deleteSearchWord","categoryList","key","selectedCategory","setselectedCategory","allEvent","length","page","color","min","max","max-pages","input","Activity","data","idx","showInfo","src","image","eventTitle","owner","timeDiffCalc","Date","eventEdDate","eventIntroduction","name","props","setup","dateFuture","dateNow","diffInMilliSeconds","Math","abs","getTime","days","floor","hours","minutes","difference","render","QCard","QCardSection","Ripple","nodes","CategoryNode","selected","GetNodeID","node-key","text-color","no-connectors","emit","processCategoryNode","NodeItem","tempNode","cateId","label","cateName","children","childNode","undefined","forEach","item","push","ID","newVal","oldVal","console","log","value","QTree","size","clickAll","clickArticles","searchWords","submit","borderless","append","stringOption","val","index","dense","deleteValue","sortConditionSelect","changeSortCondition","options","sortConditionFromProp","options-dense","emits","model","refKey","components","QBtn","QInput","QIcon","QChip","QSelect","defaultCondition","category","tag","queryList","nonCompleteEvent","sortBy","eventPersonnel","allCondition","JSON","parse","stringify","getEventWithCondition","splice","then","response","getEventTree","newID","sortString","tempSortString","minPages","maxPages","CardList","EventCategory","ActivityFilter","QPagination"],"mappings":"4IACUA,GAAG,gB,GACAC,MAAM,a,GACFA,MAAM,iB,EACP,eAA8B,OAAzBA,MAAM,cAAY,S,GAClBA,MAAM,mB,GAYNA,MAAM,wB,GACFA,MAAM,+B,mBAYFA,MAAM,0B,0LA7B/B,eA6CO,OA7CP,EA6CO,CA5CH,eA2CM,MA3CN,EA2CM,CA1CF,eAyCM,MAzCN,EAyCM,CAxCF,EACA,eAWM,MAXN,EAWM,CAVF,eASE,GARGC,cAAe,EAAAA,cACfC,mBAAoB,EAAAA,mBACpBC,cAAe,EAAAA,cACf,mBAAkB,EAAAC,iBAClB,yBAAwB,EAAAC,uBACxB,cAAa,EAAAC,YACb,mBAAkB,EAAAC,iBAClB,mBAAkB,EAAAC,kB,2KAG3B,eA0BM,MA1BN,EA0BM,CAzBF,eAOM,MAPN,EAOM,CANF,eAKE,GAJGC,aAAc,EAAAA,aACdC,IAAK,EAAAD,aACLE,iBAAkB,EAAAA,iBAClB,sBAAqB,EAAAC,qB,wFAG9B,eAgBM,OAhBDZ,MAAM,WAAYU,IAAK,EAAAG,U,CACE,IAAf,EAAAA,SAASC,Q,iBAApB,eAEM,QAF4B,Y,iBAGlC,eAEM,MAFN,EAEM,CADF,eAAkC,GAAtBD,SAAU,EAAAA,UAAQ,wBAElC,eAQE,GAPEb,MAAM,a,WACG,EAAAe,K,qDAAA,EAAAA,KAAI,IACbC,MAAM,YACLC,IAAK,EACLC,IAAK,GACLC,YAAW,EACXC,OAAO,G,6DC7BzBpB,MAAM,W,GACNA,MAAM,kB,GAERA,MAAM,Y,SAKTA,MAAM,a,GAGDA,MAAM,mC,GACNA,MAAM,8B,GAEJA,MAAM,kB,GAGRA,MAAM,Y,+IA3Bf,eA+BS,2BA5Be,EAAAqB,UAAQ,SAAtBC,EAAMC,G,wCAHhB,eA+BS,GA7BPvB,MAAM,yBAELU,IAAKa,EACL,YAAS,mBAAED,EAAKE,UAAQ,GACxB,aAAU,mBAAEF,EAAKE,UAAQ,I,yBAE1B,iBAAyB,CAAzB,eAAyB,OAAnBC,IAAKH,EAAKI,O,UAChB,eAGiB,Q,wBAFf,iBAAgD,CAAhD,eAAgD,MAAhD,EAAgD,eAAxBJ,EAAKK,YAAU,GACvC,eAAmF,MAAnF,EAAmF,eAA1C,KAAVL,EAAKM,MAAL,aAA0BN,EAAKM,OAAK,W,WAErE,eAEM,MAFN,EAEM,CADJ,eAA2D,2BAAlD,EAAAC,aAAY,IAAKC,KAAKR,EAAKS,eAAW,KAKzCT,EAAKE,U,iBAFb,eAaM,MAbN,EAaM,CATJ,eAAwE,MAAxE,EAAwE,eAAxBF,EAAKK,YAAU,GAC/D,eAGM,MAHN,EAGM,CAFJ,eAAyC,2BAAhCL,EAAKU,mBAAiB,GAC/B,eAAmF,MAAnF,EAAmF,eAA1C,KAAVV,EAAKM,MAAL,aAA0BN,EAAKM,OAAK,SAGrE,eAEM,MAFN,EAEM,CADJ,eAA2D,2BAAlD,EAAAC,aAAY,IAAKC,KAAKR,EAAKS,eAAW,Q,oFC1BxC,OACbE,KAAM,WACNC,MAAO,CAAC,YACRC,MAHa,SAGPD,GACJ,IAAMb,EAAW,eAAMa,EAAO,YAE9B,SAASL,EAAaO,GACpB,IAAIC,EAAU,IAAIP,KACdQ,EACFC,KAAKC,IAAIJ,EAAWK,UAAYJ,EAAQI,WAAa,IAEjDC,EAAOH,KAAKI,MAAML,EAAqB,OAC7CA,GAA6B,MAAPI,EAEtB,IAAME,EAAQL,KAAKI,MAAML,EAAqB,MAAQ,GACtDA,GAA8B,KAARM,EAEtB,IAAMC,EAAUN,KAAKI,MAAML,EAAqB,IAAM,GACtDA,GAAgC,GAAVO,EACtB,IAAIC,EAAa,GAUjB,OATIJ,EAAO,IACTI,GAAc,UAAgBJ,EAAP,IAATA,EAAA,mBAEhBI,GACE,UAAgCF,EAAtB,IAAVA,GAAyB,IAAVA,EAAf,oBACFE,GACE,UACOD,EADP,YAGKC,EAET,MAAO,CACLzB,WACAQ,kB,yDCjCN,EAAOkB,OAAS,EAED,QAIf,IAAS,EAAQ,aAAc,CAACC,QAAA,KAAMC,eAAA,OAAe,IAAS,EAAQ,aAAc,CAACC,SAAA,O,OCR9ElD,MAAM,uB,+EAAX,eAUM,MAVN,EAUM,CATJ,eAQE,GAPCmD,MAAO,EAAAC,aACAC,SAAU,EAAAA,S,oDAAA,EAAAA,SAAQ,IAKR,EAAAC,WAJlBC,WAAS,KACTvC,MAAM,MACNwC,aAAW,UACXC,gBAAA,I,iECLS,GACbvB,MAAO,CAAC,eAAgB,oBACxBC,MAFa,SAEPD,EAFO,GAEkB,IAAXwB,EAAW,EAAXA,KACZjD,EAAe,eAAMyB,EAAO,gBAC5BkB,EAAe,eAAsB,IACrCC,EAAW,eAAMnB,EAAO,oBAExByB,EAAsB,SAAtBA,EAAuBC,GAA0B,MACjDC,EAA2B,CAC7B9D,GAAI6D,EAASE,OACbC,MAAOH,EAASI,SAChBC,SAAU,IAUZ,OAPiC,KAA/B,UAAAL,EAASM,iBAAT,eAAoBpD,cACGqD,IAAvBP,EAASM,WAETN,EAASM,UAAUE,SAAQ,SAACC,GAC1BR,EAASI,SAASK,KAAKX,EAAoBU,OAGxCR,GAGHP,EAAY,SAACiB,GACjBb,EAAK,sBAAuBa,IAY9B,OATA,eAAMlB,GAAU,SAACmB,EAAQC,GACvBC,QAAQC,IAAI,wBAAyBH,EAAQC,MAG/C,gBAAU,WAC0B,IAA9BhE,EAAamE,MAAM9D,SACrBsC,EAAawB,MAAQjB,EAAoBlD,EAAamE,OAAOX,aAG1D,CACLb,eACAC,WACAC,e,YCxCN,EAAOP,OAAS,EAED,QAGf,IAAS,EAAQ,aAAc,CAAC8B,QAAA,O,OCPvB7E,MAAM,e,GACFA,MAAM,a,GAINA,MAAM,gB,GAMFA,MAAM,gB,GAUdA,MAAM,gB,EAEH,eAAiB,aAAV,MAAE,G,yNAvBjB,eAoBM,MApBN,EAoBM,CAnBF,eAGM,MAHN,EAGM,CAFF,eAAuE,GAAhEA,MAAM,eAAe+D,MAAM,KAAKe,KAAK,KAAM,QAAK,+BAAE,EAAAC,eACzD,eAAoF,GAA7E/E,MAAM,uBAAuB+D,MAAM,KAAKe,KAAK,KAAM,QAAK,+BAAE,EAAAE,sBAErE,eAcM,MAdN,EAcM,CAbF,eAIU,GAJDhF,MAAM,mB,WAA4B,EAAAiF,Y,qDAAA,EAAAA,YAAW,IAAG,UAAO,+CAAQ,EAAAC,OAAO,EAAAD,eAAW,YAAGE,WAAA,I,CACxEC,OAAM,gBACnB,iBAA4E,CAA5E,eAA4E,GAApEnD,KAAK,SAAU,QAAK,+BAAE,EAAAiD,OAAO,EAAAD,eAAcjF,MAAM,uB,uBAGjE,eAOM,MAPN,EAOM,E,mBANF,eAKO,2BALsB,EAAAqF,cAAY,SAA3BC,EAAKC,G,wBAAnB,eAKO,QALqC7E,IAAK4E,GAAG,CAChD,eAGS,GAHDE,MAAA,GAAMV,KAAK,KAAK9D,MAAM,W,yBACzB,iBAAS,C,8BAANsE,GAAM,IACV,kBAA0E,GAAlErD,KAAK,QAAS,QAAK,mBAAE,EAAAwD,YAAYF,IAAQvF,MAAM,kB,oDAM3E,eAaM,MAbN,EAaM,CAZF,eAWM,YAVF,EACA,eAQE,GAPEA,MAAM,kB,WACG,EAAA0F,oB,sDAAA,EAAAA,oBAAmB,I,qBAENJ,G,OAAQ,EAAAK,oBAAoBL,MADjDM,QAAS,EAAAC,sBAEVV,WAAA,GACAK,MAAA,GACAM,gBAAA,I,0CC7BD,OACX5D,MAAO,CAAC,gBAAiB,qBAAsB,iBAC/C6D,MAAO,CAAC,mBAAoB,yBAA0B,cAAe,mBAAoB,oBACzF5D,MAHW,SAGLD,EAHK,GAGoB,IAAXwB,EAAW,EAAXA,KACVmC,EAAwB,eAAM3D,EAAO,iBACrCwD,EAAsB,eAAMxD,EAAO,sBACnC0D,EAAU,CAAC,SAAU,WAAY,UAAW,QAAS,UACrDI,EAAQ,eAAIJ,EAAQ,IACpBP,EAAe,eAAMnD,EAAO,iBAC5B+C,EAAc,eAAI,MAElBC,EAAS,SAACe,GACZvB,QAAQC,IAAIsB,GACZvC,EAAK,mBAAoBuC,GACzBhB,EAAYL,MAAQ,MAGlBa,EAAc,SAACF,GACjB7B,EAAK,mBAAoB6B,IAGvBI,EAAsB,SAACL,GACzB5B,EAAK,mBAAoB4B,IAGvBP,EAAW,WACbrB,EAAK,2BAGHsB,EAAgB,WAClBtB,EAAK,gBAGT,MAAO,CACHkC,UACAI,QACAH,wBACAH,sBACAL,eACAJ,cACAQ,cACAP,SACAS,sBACAZ,WACAC,kBAGRkB,WAAY,I,4DC/ChB,EAAOnD,OAAS,EAED,QAOf,IAAS,EAAQ,aAAc,CAACoD,OAAA,KAAKC,SAAA,KAAOC,QAAA,KAAMC,QAAA,KAAMC,UAAA,O,gBCJzC,GACXpE,MADW,WAEP,IAAMlC,EAA0B,CAC5B,YACA,YACA,UACA,WAEEuG,EAA0C,CAC5CC,SAAU,EACVC,IAAK,GACLC,UAAW,GACXC,iBAAkB,KAClBC,OAAQ,WACRC,eAAgB,IAEdC,EAA2C,eAAIC,KAAKC,MAAMD,KAAKE,UAAUV,KAEzEtG,EAAqB,eAAID,EAAc,IACvC2F,EAAoB,CAAC,SAAU,WAAY,UAAW,QAAS,UAC/D7E,EAAoB,eAAI,GACxBF,EAA6B,eAAI,IACjCJ,EAAoC,eAAI,IACxCE,EAAgC,gBAAK,GAErCR,EAA+B,eAAI,IAEnCI,EAAmB,SAAC0F,GACtBvB,QAAQC,IAAIsB,GACZ9F,EAAcyE,MAAMN,KAAK2B,GACzBc,EAAanC,MAAM+B,UAAYxG,EAAcyE,MAC7CuC,KAGE3G,EAAmB,SAAC+E,GACtBpF,EAAcyE,MAAMwC,OAAO7B,EAAO,GAClCwB,EAAanC,MAAM+B,UAAYxG,EAAcyE,MAC7CuC,KAGEA,EAAwB,WAC1B,eAAyB,CACrBV,SAAUM,EAAanC,MAAM6B,SAC7BC,IAAKK,EAAanC,MAAM8B,IACxBC,UAAWI,EAAanC,MAAM+B,UAC9BE,OAAQE,EAAanC,MAAMiC,SAC5BQ,MAAK,SAACC,GACLzG,EAAS+D,MAAQ0C,EAAShG,SAI5BjB,EAAyB,WAC3B0G,EAAanC,MAAM6B,SAAW,EAC9BM,EAAanC,MAAM8B,IAAM,GACzB/F,EAAiBiE,MAAQ,EACzBuC,KAGEI,EAAe,WACjB,iBAAsBF,MAAK,SAACC,GACxB7G,EAAamE,MAAQ0C,EAAShG,SAIhCV,EAAsB,SAAC4G,GACzB9C,QAAQC,IAAI,oBACZoC,EAAanC,MAAM6B,SAAWe,EAC9B7G,EAAiBiE,MAAQ4C,EACzBL,KAGE7G,EAAc,WAChByG,EAAanC,MAAM8B,IAAM,IACzBS,KAGE/G,EAAmB,SAACqH,GACtB,IAAIC,EAAiB,GACrB,OAAQD,GACJ,IAAK,YACDC,EAAiB,kBACjB,MACJ,IAAK,YACDA,EAAiB,mBACjB,MACJ,IAAK,UACDA,EAAiB,UACjB,MACJ,IAAK,UACDA,EAAiB,WACjB,MACJ,QACIA,EAAiB,GACjB,MAERX,EAAanC,MAAMiC,OAASa,EAC5BxH,EAAmB0E,MAAQ6C,EAC3BN,KAoBJ,OAjBA,eAAMxG,GAAkB,SAAC6D,EAAQC,GAC7BC,QAAQC,IAAI,wBAAyBH,EAAQC,MAGjD,eAAMvE,GAAoB,SAACsE,GACvBE,QAAQC,IAAI,kCAAmCH,MAEnD,eAAMuC,GAAc,SAACvC,GACjBE,QAAQC,IAAI,4BAA6BH,MAG7C,gBAAU,WACN+C,IACAR,EAAanC,MAAMiC,OAAS,kBAC5BM,OAGG,CACHvB,UACA7E,KAAMA,EACN4G,SAAU,EACVC,SAAU,GACV/G,WACAJ,eACAE,mBACAV,gBACAC,qBACAC,gBACAS,sBACAR,mBACAC,yBACAC,cACAC,mBACAC,qBAIR0F,WAAY,CACR2B,WACAC,gBACAC,mB,YCjJR,EAAOhF,OAASA,EAED,eAGf,IAAS,EAAQ,aAAc,CAACiF,cAAA","file":"js/chunk-2d0be6cc.68184230.js","sourcesContent":["<template>\r\n    <main id=\"ActivityView\">\r\n        <div class=\"container\">\r\n            <div class=\"activity-main\">\r\n                <div class=\"head-block\"></div>\r\n                <div class=\"activity-filter\">\r\n                    <activity-filter\r\n                        :sortCondition=\"sortCondition\"\r\n                        :sortConditionModel=\"sortConditionModel\"\r\n                        :stringOptions=\"stringOptions\"\r\n                        @setSortCondition=\"setSortCondition\"\r\n                        @setDefaultAllCondition=\"setDefaultAllCondition\"\r\n                        @setArticles=\"setArticles\"\r\n                        @handleSearchWord=\"handleSearchWord\"\r\n                        @deleteSearchWord=\"deleteSearchWord\"\r\n                    />\r\n                </div>\r\n                <div class=\"activity-information\">\r\n                    <div class=\"event-category scrollbarCol\">\r\n                        <event-category\r\n                            :categoryList=\"categoryList\"\r\n                            :key=\"categoryList\"\r\n                            :selectedCategory=\"selectedCategory\"\r\n                            @setselectedcategory=\"setselectedCategory\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"card-set\" :key=\"allEvent\">\r\n                        <div v-if=\"allEvent.length === 0\">\r\n                            尚無活動\r\n                        </div>\r\n                        <div class=\"card-list scrollbarCol\" v-else>\r\n                            <card-list :allEvent=\"allEvent\" />\r\n                        </div>\r\n                        <q-pagination\r\n                            class=\"pagination\"\r\n                            v-model=\"page\"\r\n                            color=\"orange-12\"\r\n                            :min=\"1\"\r\n                            :max=\"15\"\r\n                            :max-pages=\"6\"\r\n                            :input=\"true\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport CardList from \"../components/ActivityViewPage/CardList.vue\";\r\nimport EventCategory from \"../components/ActivityViewPage/EventCategory.vue\";\r\nimport ActivityFilter from \"../components/ActivityViewPage/ActivityFilter.vue\";\r\nimport { apiGetEventWithCondition, apiGetEventCategory } from \"../apis/api/userRequest\";\r\nimport { categoryNode, EventType, GetEventWithCondition } from \"../apis/type\";\r\nimport { ref, onMounted, Ref, watch } from \"vue\";\r\n\r\nexport default {\r\n    setup() {\r\n        const sortCondition: string[] = [\r\n            \"依活動開始時間升序\",\r\n            \"依活動開始時間降序\",\r\n            \"依參與人數升序\",\r\n            \"依參與人數降序\",\r\n        ];\r\n        const defaultCondition: GetEventWithCondition = {\r\n            category: 0,\r\n            tag: \"\",\r\n            queryList: [],\r\n            nonCompleteEvent: \"No\",\r\n            sortBy: \"non_sort\",\r\n            eventPersonnel: \"\",\r\n        };\r\n        const allCondition: Ref<GetEventWithCondition> = ref(JSON.parse(JSON.stringify(defaultCondition)));\r\n\r\n        const sortConditionModel = ref(sortCondition[0]);\r\n        const options: string[] = [\"Google\", \"Facebook\", \"Twitter\", \"Apple\", \"Oracle\"];\r\n        const page: Ref<number> = ref(1);\r\n        const allEvent: Ref<EventType[]> = ref([]);\r\n        const categoryList: Ref<categoryNode[]> = ref([]);\r\n        const selectedCategory: Ref<number> = ref(-1);\r\n\r\n        const stringOptions: Ref<string[]> = ref([]);\r\n\r\n        const handleSearchWord = (refKey: string) => {\r\n            console.log(refKey);\r\n            stringOptions.value.push(refKey);\r\n            allCondition.value.queryList = stringOptions.value;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const deleteSearchWord = (index: number) => {\r\n            stringOptions.value.splice(index, 1);\r\n            allCondition.value.queryList = stringOptions.value;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const getEventWithCondition = () => {\r\n            apiGetEventWithCondition({\r\n                category: allCondition.value.category,\r\n                tag: allCondition.value.tag,\r\n                queryList: allCondition.value.queryList,\r\n                sortBy: allCondition.value.sortBy,\r\n            }).then((response: any) => {\r\n                allEvent.value = response.data;\r\n            });\r\n        };\r\n\r\n        const setDefaultAllCondition = () => {\r\n            allCondition.value.category = 0;\r\n            allCondition.value.tag = \"\";\r\n            selectedCategory.value = 0;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const getEventTree = () => {\r\n            apiGetEventCategory().then((response: any) => {\r\n                categoryList.value = response.data;\r\n            });\r\n        };\r\n\r\n        const setselectedCategory = (newID: number) => {\r\n            console.log(\"---click All----\");\r\n            allCondition.value.category = newID;\r\n            selectedCategory.value = newID;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const setArticles = () => {\r\n            allCondition.value.tag = \"S\";\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const setSortCondition = (sortString: string) => {\r\n            let tempSortString = \"\";\r\n            switch (sortString) {\r\n                case \"依活動開始時間升序\":\r\n                    tempSortString = \"eventStDate_asc\";\r\n                    break;\r\n                case \"依活動開始時間降序\":\r\n                    tempSortString = \"eventStDate_desc\";\r\n                    break;\r\n                case \"依參與人數升序\":\r\n                    tempSortString = \"hot_asc\";\r\n                    break;\r\n                case \"依參與人數降序\":\r\n                    tempSortString = \"hot_desc\";\r\n                    break;\r\n                default:\r\n                    tempSortString = \"\";\r\n                    break;\r\n            }\r\n            allCondition.value.sortBy = tempSortString;\r\n            sortConditionModel.value = sortString;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        watch(selectedCategory, (newVal, oldVal) => {\r\n            console.log(\"selected-watchsssssss\", newVal, oldVal);\r\n        });\r\n\r\n        watch(sortConditionModel, (newVal) => {\r\n            console.log(\"sortConditionModel-watchsssssss\", newVal);\r\n        });\r\n        watch(allCondition, (newVal) => {\r\n            console.log(\"allCondition-watchsssssss\", newVal);\r\n        });\r\n\r\n        onMounted(() => {\r\n            getEventTree();\r\n            allCondition.value.sortBy = \"eventStDate_asc\";\r\n            getEventWithCondition();\r\n        });\r\n\r\n        return {\r\n            options,\r\n            page: page,\r\n            minPages: 1,\r\n            maxPages: 15,\r\n            allEvent,\r\n            categoryList,\r\n            selectedCategory,\r\n            sortCondition,\r\n            sortConditionModel,\r\n            stringOptions,\r\n            setselectedCategory,\r\n            setSortCondition,\r\n            setDefaultAllCondition,\r\n            setArticles,\r\n            handleSearchWord,\r\n            deleteSearchWord,\r\n        };\r\n    },\r\n\r\n    components: {\r\n        CardList,\r\n        EventCategory,\r\n        ActivityFilter,\r\n    },\r\n};\r\n</script>\r\n","<template>\r\n  <q-card\r\n    v-ripple\r\n    class=\"my-card cursor-pointer \"\r\n    v-for=\"(data, idx) in Activity\"\r\n    :key=\"idx\"\r\n    @mouseover=\"data.showInfo = true\"\r\n    @mouseleave=\"data.showInfo = false\"\r\n  >\r\n    <img :src=\"data.image\" />\r\n    <q-card-section>\r\n      <div class=\"text-h6\">{{ data.eventTitle }}</div>\r\n      <div class=\"text-subtitle2\">{{ data.owner !== \"\" ? `by ${data.owner}` : \"\" }}</div>\r\n    </q-card-section>\r\n    <div class=\"timeline\">\r\n      <span>{{ timeDiffCalc(new Date(data.eventEdDate)) }}</span>\r\n    </div>\r\n\r\n    <div\r\n      class=\"q-pt-none\"\r\n      v-if=\"data.showInfo\"\r\n    >\r\n      <div class=\"text-h6 card-title scrollbarCol\">{{ data.eventTitle }}</div>\r\n      <div class=\"hover-content scrollbarCol\">\r\n        <span>{{ data.eventIntroduction }}</span>\r\n        <div class=\"text-subtitle2\">{{ data.owner !== \"\" ? `by ${data.owner}` : \"\" }}</div>\r\n      </div>\r\n\r\n      <div class=\"timeline\">\r\n        <span>{{ timeDiffCalc(new Date(data.eventEdDate)) }}</span>\r\n      </div>\r\n    </div>\r\n  </q-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { toRef } from \"vue\";\r\n\r\nexport default {\r\n  name: \"CardList\",\r\n  props: [\"allEvent\"],\r\n  setup(props: any) {\r\n    const Activity = toRef(props, \"allEvent\");\r\n    //計算時間差距\r\n    function timeDiffCalc(dateFuture: Date) {\r\n      let dateNow = new Date();\r\n      let diffInMilliSeconds: number =\r\n        Math.abs(dateFuture.getTime() - dateNow.getTime()) / 1000;\r\n      // calculate days\r\n      const days = Math.floor(diffInMilliSeconds / 86400);\r\n      diffInMilliSeconds -= days * 86400;\r\n      // calculate hours\r\n      const hours = Math.floor(diffInMilliSeconds / 3600) % 24;\r\n      diffInMilliSeconds -= hours * 3600;\r\n      // calculate minutes\r\n      const minutes = Math.floor(diffInMilliSeconds / 60) % 60;\r\n      diffInMilliSeconds -= minutes * 60;\r\n      let difference = \"\";\r\n      if (days > 0) {\r\n        difference += days === 1 ? `${days} day ` : `${days} days `;\r\n      }\r\n      difference +=\r\n        hours === 0 || hours === 1 ? `${hours} hour ` : `${hours} hours `;\r\n      difference +=\r\n        minutes === 0 || hours === 1\r\n          ? `${minutes} minutes`\r\n          : `${minutes} minutes`;\r\n      return difference;\r\n    }\r\n    return {\r\n      Activity,\r\n      timeDiffCalc,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","\r\nimport { toRef } from \"vue\";\r\n\r\nexport default {\r\n  name: \"CardList\",\r\n  props: [\"allEvent\"],\r\n  setup(props: any) {\r\n    const Activity = toRef(props, \"allEvent\");\r\n    //計算時間差距\r\n    function timeDiffCalc(dateFuture: Date) {\r\n      let dateNow = new Date();\r\n      let diffInMilliSeconds: number =\r\n        Math.abs(dateFuture.getTime() - dateNow.getTime()) / 1000;\r\n      // calculate days\r\n      const days = Math.floor(diffInMilliSeconds / 86400);\r\n      diffInMilliSeconds -= days * 86400;\r\n      // calculate hours\r\n      const hours = Math.floor(diffInMilliSeconds / 3600) % 24;\r\n      diffInMilliSeconds -= hours * 3600;\r\n      // calculate minutes\r\n      const minutes = Math.floor(diffInMilliSeconds / 60) % 60;\r\n      diffInMilliSeconds -= minutes * 60;\r\n      let difference = \"\";\r\n      if (days > 0) {\r\n        difference += days === 1 ? `${days} day ` : `${days} days `;\r\n      }\r\n      difference +=\r\n        hours === 0 || hours === 1 ? `${hours} hour ` : `${hours} hours `;\r\n      difference +=\r\n        minutes === 0 || hours === 1\r\n          ? `${minutes} minutes`\r\n          : `${minutes} minutes`;\r\n      return difference;\r\n    }\r\n    return {\r\n      Activity,\r\n      timeDiffCalc,\r\n    };\r\n  },\r\n};\r\n","import { render } from \"./CardList.vue?vue&type=template&id=e5cbf53c\"\nimport script from \"./CardList.vue?vue&type=script&lang=ts\"\nexport * from \"./CardList.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QCardSection});qInstall(script, 'directives', {Ripple});\n","<template>\r\n  <div class=\"q-pa-md q-gutter-sm\">\r\n    <q-tree\r\n      :nodes=\"CategoryNode\"\r\n      v-model:selected=\"selected\"\r\n      node-key=\"id\"\r\n      color=\"red\"\r\n      text-color=\"#402e32\"\r\n      no-connectors\r\n      @update:selected=\"GetNodeID\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { toRef, ref, onMounted, watch } from \"vue\";\r\nimport { categoryNode, QuasartreeNode } from \"../../apis/type\";\r\nexport default {\r\n  props: [\"categoryList\", \"selectedCategory\"],\r\n  setup(props: any, { emit }: any) {\r\n    const categoryList = toRef(props, \"categoryList\");\r\n    const CategoryNode = ref<QuasartreeNode[]>([]);\r\n    const selected = toRef(props, \"selectedCategory\");\r\n\r\n    const processCategoryNode = (NodeItem: categoryNode) => {\r\n      let tempNode: QuasartreeNode = {\r\n        id: NodeItem.cateId,\r\n        label: NodeItem.cateName,\r\n        children: [],\r\n      };\r\n      if (\r\n        NodeItem.childNode?.length !== 0 &&\r\n        NodeItem.childNode !== undefined\r\n      ) {\r\n        NodeItem.childNode.forEach((item: categoryNode) => {\r\n          tempNode.children.push(processCategoryNode(item));\r\n        });\r\n      }\r\n      return tempNode;\r\n    };\r\n\r\n    const GetNodeID = (ID: any) => {\r\n      emit(\"setselectedcategory\", ID);\r\n    };\r\n\r\n    watch(selected, (newVal, oldVal) => {\r\n      console.log(\"selected-watchsssssss\", newVal, oldVal);\r\n    });\r\n\r\n    onMounted(() => {\r\n      if (categoryList.value.length !== 0)\r\n        CategoryNode.value = processCategoryNode(categoryList.value).children;\r\n    });\r\n\r\n    return {\r\n      CategoryNode,\r\n      selected,\r\n      GetNodeID,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","\r\nimport { toRef, ref, onMounted, watch } from \"vue\";\r\nimport { categoryNode, QuasartreeNode } from \"../../apis/type\";\r\nexport default {\r\n  props: [\"categoryList\", \"selectedCategory\"],\r\n  setup(props: any, { emit }: any) {\r\n    const categoryList = toRef(props, \"categoryList\");\r\n    const CategoryNode = ref<QuasartreeNode[]>([]);\r\n    const selected = toRef(props, \"selectedCategory\");\r\n\r\n    const processCategoryNode = (NodeItem: categoryNode) => {\r\n      let tempNode: QuasartreeNode = {\r\n        id: NodeItem.cateId,\r\n        label: NodeItem.cateName,\r\n        children: [],\r\n      };\r\n      if (\r\n        NodeItem.childNode?.length !== 0 &&\r\n        NodeItem.childNode !== undefined\r\n      ) {\r\n        NodeItem.childNode.forEach((item: categoryNode) => {\r\n          tempNode.children.push(processCategoryNode(item));\r\n        });\r\n      }\r\n      return tempNode;\r\n    };\r\n\r\n    const GetNodeID = (ID: any) => {\r\n      emit(\"setselectedcategory\", ID);\r\n    };\r\n\r\n    watch(selected, (newVal, oldVal) => {\r\n      console.log(\"selected-watchsssssss\", newVal, oldVal);\r\n    });\r\n\r\n    onMounted(() => {\r\n      if (categoryList.value.length !== 0)\r\n        CategoryNode.value = processCategoryNode(categoryList.value).children;\r\n    });\r\n\r\n    return {\r\n      CategoryNode,\r\n      selected,\r\n      GetNodeID,\r\n    };\r\n  },\r\n};\r\n","import { render } from \"./EventCategory.vue?vue&type=template&id=3e1ddf20\"\nimport script from \"./EventCategory.vue?vue&type=script&lang=ts\"\nexport * from \"./EventCategory.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QTree from 'quasar/src/components/tree/QTree.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QTree});\n","<template>\r\n    <div class=\"left-search\">\r\n        <div class=\"right-btn\">\r\n            <q-btn class=\"activity-all\" label=\"全部\" size=\"md\" @click=\"clickAll()\" />\r\n            <q-btn class=\"activity-recommended\" label=\"精選\" size=\"md\" @click=\"clickArticles()\" />\r\n        </div>\r\n        <div class=\"search-input\">\r\n            <q-input class=\"search-textfield\" v-model=\"searchWords\" @keydown.enter=\"submit(searchWords)\" borderless>\r\n                <template v-slot:append>\r\n                    <q-icon name=\"search\" @click=\"submit(searchWords)\" class=\"cursor-pointer\" />\r\n                </template>\r\n            </q-input>\r\n            <div class=\"search-words\">\r\n                <span v-for=\"(val, index) in stringOption\" :key=\"val\">\r\n                    <q-chip dense size=\"md\" color=\"#eeb888\"\r\n                        >{{ val }}\r\n                        <q-icon name=\"close\" @click=\"deleteValue(index)\" class=\"cursor-pointer\" />\r\n                    </q-chip>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"right-search\">\r\n        <div>\r\n            <label>排序</label>\r\n            <q-select\r\n                class=\"select-category\"\r\n                v-model=\"sortConditionSelect\"\r\n                :options=\"sortConditionFromProp\"\r\n                @update:model-value=\"(val) => changeSortCondition(val)\"\r\n                borderless\r\n                dense\r\n                options-dense\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { ref, toRef } from \"vue\";\r\n\r\nexport default {\r\n    props: [\"sortCondition\", \"sortConditionModel\", \"stringOptions\"],\r\n    emits: [\"setSortCondition\", \"setDefaultAllCondition\", \"setArticles\", \"handleSearchWord\", \"deleteSearchWord\"],\r\n    setup(props: any, { emit }: any) {\r\n        const sortConditionFromProp = toRef(props, \"sortCondition\");\r\n        const sortConditionSelect = toRef(props, \"sortConditionModel\");\r\n        const options = [\"Google\", \"Facebook\", \"Twitter\", \"Apple\", \"Oracle\"];\r\n        const model = ref(options[0]);\r\n        const stringOption = toRef(props, \"stringOptions\");\r\n        const searchWords = ref(null);\r\n\r\n        const submit = (refKey: string) => {\r\n            console.log(refKey);\r\n            emit(\"handleSearchWord\", refKey);\r\n            searchWords.value = null;\r\n        };\r\n\r\n        const deleteValue = (index: number) => {\r\n            emit(\"deleteSearchWord\", index);\r\n        };\r\n\r\n        const changeSortCondition = (val: string) => {\r\n            emit(\"setSortCondition\", val);\r\n        };\r\n\r\n        const clickAll = () => {\r\n            emit(\"setDefaultAllCondition\");\r\n        };\r\n\r\n        const clickArticles = () => {\r\n            emit(\"setArticles\");\r\n        };\r\n\r\n        return {\r\n            options,\r\n            model,\r\n            sortConditionFromProp,\r\n            sortConditionSelect,\r\n            stringOption,\r\n            searchWords,\r\n            deleteValue,\r\n            submit,\r\n            changeSortCondition,\r\n            clickAll,\r\n            clickArticles,\r\n        };\r\n    },\r\n    components: {},\r\n};\r\n</script>\r\n","\r\nimport { ref, toRef } from \"vue\";\r\n\r\nexport default {\r\n    props: [\"sortCondition\", \"sortConditionModel\", \"stringOptions\"],\r\n    emits: [\"setSortCondition\", \"setDefaultAllCondition\", \"setArticles\", \"handleSearchWord\", \"deleteSearchWord\"],\r\n    setup(props: any, { emit }: any) {\r\n        const sortConditionFromProp = toRef(props, \"sortCondition\");\r\n        const sortConditionSelect = toRef(props, \"sortConditionModel\");\r\n        const options = [\"Google\", \"Facebook\", \"Twitter\", \"Apple\", \"Oracle\"];\r\n        const model = ref(options[0]);\r\n        const stringOption = toRef(props, \"stringOptions\");\r\n        const searchWords = ref(null);\r\n\r\n        const submit = (refKey: string) => {\r\n            console.log(refKey);\r\n            emit(\"handleSearchWord\", refKey);\r\n            searchWords.value = null;\r\n        };\r\n\r\n        const deleteValue = (index: number) => {\r\n            emit(\"deleteSearchWord\", index);\r\n        };\r\n\r\n        const changeSortCondition = (val: string) => {\r\n            emit(\"setSortCondition\", val);\r\n        };\r\n\r\n        const clickAll = () => {\r\n            emit(\"setDefaultAllCondition\");\r\n        };\r\n\r\n        const clickArticles = () => {\r\n            emit(\"setArticles\");\r\n        };\r\n\r\n        return {\r\n            options,\r\n            model,\r\n            sortConditionFromProp,\r\n            sortConditionSelect,\r\n            stringOption,\r\n            searchWords,\r\n            deleteValue,\r\n            submit,\r\n            changeSortCondition,\r\n            clickAll,\r\n            clickArticles,\r\n        };\r\n    },\r\n    components: {},\r\n};\r\n","import { render } from \"./ActivityFilter.vue?vue&type=template&id=389732af\"\nimport script from \"./ActivityFilter.vue?vue&type=script&lang=ts\"\nexport * from \"./ActivityFilter.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QChip from 'quasar/src/components/chip/QChip.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QInput,QIcon,QChip,QSelect});\n","\r\nimport CardList from \"../components/ActivityViewPage/CardList.vue\";\r\nimport EventCategory from \"../components/ActivityViewPage/EventCategory.vue\";\r\nimport ActivityFilter from \"../components/ActivityViewPage/ActivityFilter.vue\";\r\nimport { apiGetEventWithCondition, apiGetEventCategory } from \"../apis/api/userRequest\";\r\nimport { categoryNode, EventType, GetEventWithCondition } from \"../apis/type\";\r\nimport { ref, onMounted, Ref, watch } from \"vue\";\r\n\r\nexport default {\r\n    setup() {\r\n        const sortCondition: string[] = [\r\n            \"依活動開始時間升序\",\r\n            \"依活動開始時間降序\",\r\n            \"依參與人數升序\",\r\n            \"依參與人數降序\",\r\n        ];\r\n        const defaultCondition: GetEventWithCondition = {\r\n            category: 0,\r\n            tag: \"\",\r\n            queryList: [],\r\n            nonCompleteEvent: \"No\",\r\n            sortBy: \"non_sort\",\r\n            eventPersonnel: \"\",\r\n        };\r\n        const allCondition: Ref<GetEventWithCondition> = ref(JSON.parse(JSON.stringify(defaultCondition)));\r\n\r\n        const sortConditionModel = ref(sortCondition[0]);\r\n        const options: string[] = [\"Google\", \"Facebook\", \"Twitter\", \"Apple\", \"Oracle\"];\r\n        const page: Ref<number> = ref(1);\r\n        const allEvent: Ref<EventType[]> = ref([]);\r\n        const categoryList: Ref<categoryNode[]> = ref([]);\r\n        const selectedCategory: Ref<number> = ref(-1);\r\n\r\n        const stringOptions: Ref<string[]> = ref([]);\r\n\r\n        const handleSearchWord = (refKey: string) => {\r\n            console.log(refKey);\r\n            stringOptions.value.push(refKey);\r\n            allCondition.value.queryList = stringOptions.value;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const deleteSearchWord = (index: number) => {\r\n            stringOptions.value.splice(index, 1);\r\n            allCondition.value.queryList = stringOptions.value;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const getEventWithCondition = () => {\r\n            apiGetEventWithCondition({\r\n                category: allCondition.value.category,\r\n                tag: allCondition.value.tag,\r\n                queryList: allCondition.value.queryList,\r\n                sortBy: allCondition.value.sortBy,\r\n            }).then((response: any) => {\r\n                allEvent.value = response.data;\r\n            });\r\n        };\r\n\r\n        const setDefaultAllCondition = () => {\r\n            allCondition.value.category = 0;\r\n            allCondition.value.tag = \"\";\r\n            selectedCategory.value = 0;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const getEventTree = () => {\r\n            apiGetEventCategory().then((response: any) => {\r\n                categoryList.value = response.data;\r\n            });\r\n        };\r\n\r\n        const setselectedCategory = (newID: number) => {\r\n            console.log(\"---click All----\");\r\n            allCondition.value.category = newID;\r\n            selectedCategory.value = newID;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const setArticles = () => {\r\n            allCondition.value.tag = \"S\";\r\n            getEventWithCondition();\r\n        };\r\n\r\n        const setSortCondition = (sortString: string) => {\r\n            let tempSortString = \"\";\r\n            switch (sortString) {\r\n                case \"依活動開始時間升序\":\r\n                    tempSortString = \"eventStDate_asc\";\r\n                    break;\r\n                case \"依活動開始時間降序\":\r\n                    tempSortString = \"eventStDate_desc\";\r\n                    break;\r\n                case \"依參與人數升序\":\r\n                    tempSortString = \"hot_asc\";\r\n                    break;\r\n                case \"依參與人數降序\":\r\n                    tempSortString = \"hot_desc\";\r\n                    break;\r\n                default:\r\n                    tempSortString = \"\";\r\n                    break;\r\n            }\r\n            allCondition.value.sortBy = tempSortString;\r\n            sortConditionModel.value = sortString;\r\n            getEventWithCondition();\r\n        };\r\n\r\n        watch(selectedCategory, (newVal, oldVal) => {\r\n            console.log(\"selected-watchsssssss\", newVal, oldVal);\r\n        });\r\n\r\n        watch(sortConditionModel, (newVal) => {\r\n            console.log(\"sortConditionModel-watchsssssss\", newVal);\r\n        });\r\n        watch(allCondition, (newVal) => {\r\n            console.log(\"allCondition-watchsssssss\", newVal);\r\n        });\r\n\r\n        onMounted(() => {\r\n            getEventTree();\r\n            allCondition.value.sortBy = \"eventStDate_asc\";\r\n            getEventWithCondition();\r\n        });\r\n\r\n        return {\r\n            options,\r\n            page: page,\r\n            minPages: 1,\r\n            maxPages: 15,\r\n            allEvent,\r\n            categoryList,\r\n            selectedCategory,\r\n            sortCondition,\r\n            sortConditionModel,\r\n            stringOptions,\r\n            setselectedCategory,\r\n            setSortCondition,\r\n            setDefaultAllCondition,\r\n            setArticles,\r\n            handleSearchWord,\r\n            deleteSearchWord,\r\n        };\r\n    },\r\n\r\n    components: {\r\n        CardList,\r\n        EventCategory,\r\n        ActivityFilter,\r\n    },\r\n};\r\n","import { render } from \"./ActivityView.vue?vue&type=template&id=60f65f09\"\nimport script from \"./ActivityView.vue?vue&type=script&lang=ts\"\nexport * from \"./ActivityView.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QPagination from 'quasar/src/components/pagination/QPagination.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QPagination});\n"],"sourceRoot":""}